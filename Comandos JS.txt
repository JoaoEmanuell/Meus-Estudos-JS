
Comandos

==================================

window = serve para exibir algo na tela porem é opcional, usa-se "window.comando" para definir o comando que ira aparecer na tela

==================================

alert = exibe uma mensagem de alerta

==================================

confirm = exibe uma mensagem que tem as opções de confirmar (ok) ou cancelar

==================================

prompt = exibe uma mensagem com uma caixa de pergunta em baixo, permitindo um alerta interativo

==================================

// = comentario em uma unica linha

==================================

/* = comentario em varias linhas (fecha com */)

==================================

var = cria uma variavel, no documento da aula 5 tem toda a explicação e regras para a criação de variaveis

==================================
(Aula 6)
Converter str para num:

Para fazer isso existe três formas:

Number.parseFloat = converte a str para Float

Number.parseInt = converte a str para inteiro

Number = converte a str para numero, ele sabe se deve ser float ou int

= = = 

Conveter numero para str:

String = ira receber o numero e transformar ele em uma str

var.toString = recebe o numero e converte para str

= = =

Formatação:

template strings:

para fazer isso usa-sé crase obrigatoriamente, para colocar a var você usar ${}

`O aluno ${nome} tem ${idade} anos e tirou a nota ${nota}`

Tamanho str:

variavel.length = ira dizer quantos caracteres tem a str

Maiusculas:

variavel.toUpperCase() = transforma toda a varaivel em letras maisculuas

Minsculas:

variavel.toLowerCase() = transforma toda a variavel em letras minusculas

Casas decimais fixas:

varaivel.ToFixed = faz com que o numero tenhas casas decimais fixas

Trocar:

variavel.replace('caractere1', 'caractere2') = ele ira trocar todos os caracetes 1 pelos caracteres 2

Numero para moeda:

variavel.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'}) = ele ira pegar a variavel trocar para uma str local, esitilo brasil.

= = =

documente.write = ira escrver o texto desejado diretamente na tela

==================================

Operadores aritimeticos:

Todos os dados estão no txt 7 parte 1

==================================

(txt 8 parte 2)

Operadores Relacionais:

> maior

< menor

>= maior ou igual

<= menor ou igual

== igual

!= diferente 

Operador de Identidade

=== serve para verificar se algo é realmente igual a algo

Operadores Lógicos

! = negação

&& = conjução

|| = disjunção

Ternário

? = true

: = false
==================================

(txt aula 9)

DOM comandos:

window.document.URL = escreve a URL do site

window.navigator.appName = escreve o nome do navegador

window.document.charset = escreve a configuração UTF do site

= = =

window.document.getElementsByTagName = dessa forma colocando o nome ('') da tag + a posição [] ele ira pegar os dados da tag

<tag id="nome da id"> = definir uma ID para a tag


= = =

//Todas as vars tem um comando anterior definido

window.document.write(var.innerText) = escreve o texto da var(sem formatação) na tela

var.style.color = 'cor' = modifica a cor da var

document.write(var.innerHTML) = escreve exatamente o que está descrito na tag (com formatação)

window.document.getElementById('id') = ira pegar os dados da tag que contem a ID colocada entre ''

window,document.getElementsByName = ira pegar os dados da tag que contem o nome coloacaod entre ''

window.document.querySelector('div#msg') = pega os dados da tag que contenha a ID colocada apos a #

==================================

(txt aula 10)

O nome da função se coloca depois do id da tag

onclik = ira detectar se teve um clique na tag

onmouseover = ira detectar se o mouse entrou na tag

onmouseout = ira detectar se o mouse saiu da tag

= = = 

Criando uma var dentro do script e usando o comando lister para "escutar" as ações, deixa o html mais limpo:

var a = window.document.getElementById('nome')

a.addEventLister('click', clicar)

= = =

Função:

function nome da função() {

bloco de comando

}

= = =

O comando input cria um bloco que recebe valor depedendo da configuração que você queria realizar:

number = cria um bloco que recebe numero

button = cria um bloco de botão
==================================
// Aula 11

console.log('mensagen') = exibe uma mensagem no console do node

if = se a condição seja verdadeira excute

else = se a condição for diferente da verdadeira excute
==================================
//Aula 12

new Date() = pega a data atual
.getHours() = pega a hora atual
==================================
//exercicio 3

var.setAttribute('atributo', 'nome') = seta um atributo na variavel, o atributo pode ser uma id, uma src, um nome

var.appendChild(var) = adiciona abaixo da variavel uma atributo carregado dentro de outra var, dessa forma fazendo a var 2 carregar na tela

input:radio = um input que recebe um nome e uma id, pode recebe checked, dessa forma sera criado um botão de seleção

label for = recebe a id do radio e nela sera colocado o nome do elemento
==================================
//aula 13

while = primeiro testa se a condição for positivo, depois executa o bloco

do while = primeiro executa o bloco e depois testa se a condição é positiva, os resultados são praticamente os mesmos

==================================
//aula 15

let name = [] = declara uma array string

array[n.i] = numero da chave, exibe o item que está em determinada chave

array[key] = item = adiciona um item na key especificada

array.push(item) = adiciona um item em uma key apos a ultima key da array

array.length = exibe quantos intem tem a array

array.sort(function(a, b){return a-b}) = deixa a array em ordem cresente (caso seja uma array so de numeros)

= = =

for (var c = 0; c < array.lenght, c++){
   console.log(array[c])
} = escreve cada item da array de forma individual

ou de forma mais simplificada

for (var c in array) {
   console.log(array[c])

= = =

array.indexOf(item) = localiza um item dentro da array, caso ele não exista ele retorna -1

==================================
//aula 16

function(p) = cada função pode receber um paramentro

let v = function(p){} = uma função dentro de uma varivael

object = {function(p){}} = uma função dentro de um objeto

==================================
//aula 17

let object = {key_name:item} = cria um objeto que cada chave pode receber um nome e um item e pode receber funções dentro dele

this.name = é um metodo que faz com que ele se referencie a uma chave dentro do propio objeto, util para funções

==================================

HTMLITEM.className = 'name' // modifica o nome da classe de um determinado HTMLITEM

HTMLITEM.id = 'id' // modifica o nome do id de um determinado HTMLITEM

HTMLITEM.src = 'src' // modifica o src de um determinado HTMLITEM
